title = "Configuration File"

[common_parameters]
problem_type = "regression"
train_val_split = 0.75 # 75% of samples in the training set, 25% in the validation Settings
variables = ["entorhinal_thickavg", "AgeAtScan", "Sex", "C1", "C2", "C3", "C4", "WHR", "Pulserate_ImagingVisit1", "NO2_2010", "NOx_2010", "pm10_2010", "pm2.5_2010", "pm2.5absorb_2010", "pm2.5_10um_2010", "Trafficintensity_nearestroad", "Inversedistance_nearestroad", "Trafficintensity_nearestmajorroad", "Inversedistance_nearestmajorroad_InitialVisit", "trafficload_majorroads", "closetomajorroad", "sumroadlength_100m", "NO2_2005", "NOx_2006", "NO2_2007", "pm10_2007", "Greenspace_1000m", "Domesticgarden_1000m", "Water_1000m", "Greenspace_300m", "Domesticgarden_300m", "Water_300m", "Naturalenvironment_1000m", "Naturalenvironment_300m", "Distancetocoast", "Income", "Employment", "Health", "Education", "Housing", "Crime", "LivingEnv", "PSE_WH"]
categorical_variables = ["Sex", "PSE_WH"]
target_variable = "entorhinal_thickavg"
has_header = true # First row of the dataset is a header with the name of each column
train = true
predict_new = false
get_results = true
time_limit = 1 # In hours
impute_method = "mean" # Either mean, median, most_frequent
n_runs = 5

[regression.regression_models]
linear_regression = true
gbm = true
xgBoost = false

[regression.performance_metrics]
rmse = true
mae = true
r_squared = true
pearson_correlation = true

[regression.regression_models.gbm_params]
learning_rate=[0.0001, 0.005, 0.001, 0.01, 0.1]
n_estimators=[10,50,100,250,500,1000]
min_samples_split=[2,5,10,50,100]
min_samples_leaf=[5,10,20,30,40,50]
max_depth=[5,10,15,25]
max_features='sqrt'
subsample=[0.8]
model_selection_metric="mae"

[regression.regression_models.xgb_params]
learning_rate=[0.0001, 0.005, 0.001, 0.01, 0.1]
max_depth=[5,10,15,25]
colsample_bytree=[0.3,0.5,1.0]
n_estimators=[10,50,100,250,500,1000]
gamma=[0.0,0.01,0.1,1.0]
alpha=[0.0, 0.01, 0.1, 1.0, 10.0]
lambda=[0.0, 0.001, 0.01, 0.1, 1.0, 10.0]
subsample=[0.8]
model_selection_metric="mae"

[classification.classification_models]
logistic_regression = false
extra_trees = false
random_forest = true

[classification.performance_metrics]
accuracy = true
f1 = false
auc = false #performance measure for binary classification only, leave false otherwise
roc = false #performance measure for binary classification only, leave false otherwise

[classification.classification_models.ext_params]
n_estimators=[10,50,100,250,500,1000]
min_samples_split=[2,5,10,50,100]
min_samples_leaf=[1,5,10,25,50,100]
max_features='sqrt'
model_selection_metric="accuracy"

[classification.classification_models.rf_params]
n_estimators=[10,50,100,250,500,1000]
min_samples_split=[2,5,10,50,100]
min_samples_leaf=[1,5,10,25,50,100]
max_features='sqrt'
model_selection_metric="accuracy"
